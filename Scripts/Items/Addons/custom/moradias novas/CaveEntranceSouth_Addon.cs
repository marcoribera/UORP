
////////////////////////////////////////
//                                     //
//   Generated by CEO's YAAAG - Ver 2  //
// (Yet Another Arya Addon Generator)  //
//    Modified by Hammerhand for       //
//      SA & High Seas content         //
//                                     //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class CaveEntranceSouth_Addon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {2279, -3, 0, 10}, {2281, -2, 2, 10}, {2275, 2, 1, 0}// 1	2	5	
			, {2279, 3, 1, 6}, {2279, 3, 1, 12}, {2279, 3, 1, 16}// 6	7	8	
			, {2278, 3, 1, 0}, {2273, 5, 1, 10}, {2280, 3, 0, 22}// 9	10	12	
			, {2280, 2, -1, 0}, {2280, -2, 0, 0}, {2280, -2, -1, 0}// 14	15	16	
			, {2279, 4, 1, 10}, {2280, 1, 0, 31}, {2280, 2, 0, 29}// 18	20	21	
			, {2280, 0, 0, 27}, {2280, -1, 0, 22}, {8553, 2, 0, 0}// 22	23	30	
			, {8552, -1, 0, 0}// 31	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new CaveEntranceSouth_AddonDeed();
			}
		}

		[ Constructable ]
		public CaveEntranceSouth_Addon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 2278, -2, 1, 0, 0, -1, "Snow Pile", 1);// 3
			AddComplexComponent( (BaseAddon) this, 2278, -3, 1, 0, 0, -1, "Snow Pile", 1);// 4
			AddComplexComponent( (BaseAddon) this, 2278, 3, 0, 14, 0, -1, "Snow Pile", 1);// 11
			AddComplexComponent( (BaseAddon) this, 2278, 3, 0, 0, 0, -1, "Snow Pile", 1);// 13
			AddComplexComponent( (BaseAddon) this, 2272, 5, 1, 20, 0, -1, "Snow Pile", 1);// 17
			AddComplexComponent( (BaseAddon) this, 2278, 4, 1, 0, 0, -1, "Snow Pile", 1);// 19
			AddComplexComponent( (BaseAddon) this, 2280, 0, 0, 0, 1, -1, "", 1);// 24
			AddComplexComponent( (BaseAddon) this, 2274, 1, 0, 0, 1, -1, "Snow Pile", 1);// 25
			AddComplexComponent( (BaseAddon) this, 2274, 0, -1, 0, 1, -1, "Snow Pile", 1);// 26
			AddComplexComponent( (BaseAddon) this, 2274, 1, -1, 0, 1, -1, "Snow Pile", 1);// 27
			AddComplexComponent( (BaseAddon) this, 2278, -4, 0, 0, 0, -1, "Snow Pile", 1);// 28
			AddComplexComponent( (BaseAddon) this, 2272, -2, 1, 10, 0, -1, "Snow Pile", 1);// 29

		}

		public CaveEntranceSouth_Addon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class CaveEntranceSouth_AddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new CaveEntranceSouth_Addon();
			}
		}

		[Constructable]
		public CaveEntranceSouth_AddonDeed()
		{
			Name = "CaveEntranceSouth_";
		}

		public CaveEntranceSouth_AddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}