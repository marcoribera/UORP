/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class casitamadera3Addon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new casitamadera3AddonDeed();
			}
		}

		[ Constructable ]
		public casitamadera3Addon()
		{
			AddonComponent ac = null;
			ac = new AddonComponent( 8 );
			AddComponent( ac, -2, -1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -2, 0, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -2, 1, 1 );
			ac = new AddonComponent( 15 );
			ac.Light = LightType.ArchedWindowEast;
			AddComponent( ac, -2, 0, 1 );
			ac = new AddonComponent( 8 );
			AddComponent( ac, -2, 1, 1 );
			ac = new AddonComponent( 8 );
			AddComponent( ac, -2, 2, 1 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, -1, -2, 0 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, 0, -2, 0 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, 2, -2, 0 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -1, -1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -1, 0, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -1, 1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, -1, 2, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 0, -1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 0, 0, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 0, 1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 0, 2, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 1, -1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 1, 0, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 1, 1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 1, 2, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 2, -1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 2, 0, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 2, 1, 1 );
			ac = new AddonComponent( 1226 );
			AddComponent( ac, 2, 2, 1 );
			ac = new AddonComponent( 1791 );
			AddComponent( ac, -1, -1, 16 );
			ac = new AddonComponent( 1461 );
			AddComponent( ac, -1, 0, 16 );
			ac = new AddonComponent( 1461 );
			AddComponent( ac, -1, 1, 16 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, -1, 2, 1 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, 0, 2, 1 );
			ac = new AddonComponent( 1790 );
			AddComponent( ac, -1, 2, 16 );
			ac = new AddonComponent( 2968 );
			AddComponent( ac, -1, 3, 1 );
			ac = new AddonComponent( 1473 );
			AddComponent( ac, 0, -1, 16 );
			ac = new AddonComponent( 1473 );
			AddComponent( ac, 1, -1, 16 );
			ac = new AddonComponent( 1791 );
			AddComponent( ac, 0, 0, 19 );
			ac = new AddonComponent( 1790 );
			AddComponent( ac, 0, 1, 19 );
			ac = new AddonComponent( 1472 );
			AddComponent( ac, 0, 2, 16 );
			ac = new AddonComponent( 1472 );
			AddComponent( ac, 1, 2, 16 );
			ac = new AddonComponent( 1792 );
			AddComponent( ac, 1, 0, 19 );
			ac = new AddonComponent( 8 );
			AddComponent( ac, 2, -1, 1 );
			ac = new AddonComponent( 1792 );
			AddComponent( ac, 2, -1, 16 );
			ac = new AddonComponent( 15 );
			ac.Light = LightType.ArchedWindowEast;
			AddComponent( ac, 2, 0, 1 );
			ac = new AddonComponent( 1460 );
			AddComponent( ac, 2, 0, 16 );
			ac = new AddonComponent( 1460 );
			AddComponent( ac, 2, 1, 16 );
			ac = new AddonComponent( 8 );
			AddComponent( ac, 2, 1, 1 );
			ac = new AddonComponent( 8 );
			AddComponent( ac, 2, 2, 1 );
			ac = new AddonComponent( 7 );
			AddComponent( ac, 2, 2, 1 );
			ac = new AddonComponent( 1789 );
			AddComponent( ac, 2, 2, 16 );
			ac = new AddonComponent( 1789 );
			AddComponent( ac, 2, 2, 30 );

		}

		public casitamadera3Addon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class casitamadera3AddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new casitamadera3Addon();
			}
		}

		[Constructable]
		public casitamadera3AddonDeed()
		{
			Name = "casitamadera3";
		}

		public casitamadera3AddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}